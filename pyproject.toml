[project]
name = "doubloon"
version = "0.1.0"
description = "A Yahoo! finance-based TUI **toy** stock viewer"
authors = [{ name = "Jocelyn Legault", email = "jocelynlegault@gmail.com" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.10, < 4.0"

dependencies = [
    "regex >= 2025.0, < 2026.0",
    "httpx >= 0.28, < 1.0",
    "pydantic >= 2.7, < 3.0",
    "textual >= 6.0",
    "tzdata >= 2025.2",
    "eval_type_backport >= 0.2; python_version < '3.11'",
    "pytz >= 2025.2; python_version < '3.11'",
    "typing_extensions >= 4.13; python_version < '3.12'",
]

[project.urls]
repository = "https://github.com/joce/doubloon"
homepage = "https://github.com/joce/doubloon"

[dependency-groups]
tox = [
    "tox >= 4.0, < 5.0",
    "tox-gh-actions >= 3.0, < 4.0",
]
dev = [
    { include-group = "tox" },
    "astroid >= 4.0, < 5.0",
    "black >= 25.9.0, < 26.0",
    "coverage >= 7.10, < 8.0",
    "flake8 >= 7.3, < 8.0",
    "isort >= 7, < 8",
    "pylint >= 4.0, < 5.0",
    "pylint-pydantic >= 0.4, < 1.0",
    "pyright >= 1.1, < 2.0",
    "pytest >= 8.4, < 9.0",
    "pytest-asyncio >= 1.2.0, < 2.0",
    "pytest-cov >= 7.0, < 8.0",
    "pytest-timeout >= 2.4, < 3.0",
    "pytest-md >= 0.2, < 1.0",
    "ruff >= 0.14, < 1.0",
    "textual-dev >= 1.7, < 2.0",
]

[tool.black]
target-version = ["py310", "py311", "py312", "py313"]
line-length = 88

[tool.isort]
profile = "black"
py_version = "auto"
skip = ["__pycache__", ".venv", ".git", ".pytest_cache", ".tox"]

[tool.pyright]
include = ["src", "tests"]
typeCheckingMode = "strict"

[tool.pytest.ini_options]
pythonpath = "src"
testpaths = ["tests"]
timeout = 10
asyncio_mode = "auto"
markers = [
    "unit: Fast, isolated unit tests",
    "integration: Tests involving multiple components or external dependencies",
    "ui: Textual Pilot-driven UI tests",
]

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["tests/*", "*/__main__.py"]

[tool.coverage.report]
show_missing = true
skip_covered = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.ruff]
exclude = [
    "__pycache__",
    ".git",
    ".pytest_cache",
    ".ruff_cache",
    ".specstory",
    ".venv",
    ".vscode",
    ".tox",
]
# Same as Black
line-length = 88
indent-width = 4
# Target our oldest supported Python version
target-version = "py39"

[tool.ruff.format]
# Like Black
indent-style = "space"
line-ending = "lf"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "I",
    "N",

    "ERA",
    "UP",
    "PL",
    "FLY",
    "PERF",
    "FURB",
    "DOC",
    "RUF",
    "TRY",
    "D",
    "C90",
    #"AIR",  # not using airflow
    #"FAST", # not using fastapi
    #"NPY",  # not using numpy
    #"PD",   # not using pandas

    # Flake8 checks
    "YTT",
    "ANN",
    "ASYNC",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "EM",
    "FA",
    "INT",
    "ISC",
    "ICN",
    "LOG",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TC",
    "ARG",
    "PTH",
    "PGH",
    #"CPY", # not interested
    #"DJ",  # not using Django
    #"EXE", # not using shebangs (at the moment at least)
    #"FIX", # not interested
    #"TD",  # later?
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
ignore = [
    "D105",   # Missing docstring in magic method
    "D202",   # No blank lines allowed after function docstring
    "D203",   # 1 blank line required before class docstring
    "D213",   # Multi-line docstring summary should start at the second line
    "D413",   # Missing blank line after last section
    "COM812", # Trailing comma missing
]
preview = true

[tool.ruff.lint.per-file-ignores]
# Disable Ruff some rules for tests.
"tests/*" = [
    "S101",    # Use of assert
    "SLF001",  # Private member access
    "PLC2701", # Private name import `xxx` from external module `yyy
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
allow-dunder-method-names = ["__rich__"]

[build-system]
requires = ["poetry-core >= 2.0.0, < 3.0.0"]
build-backend = "poetry.core.masonry.api"
