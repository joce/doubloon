name: CI

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        poetry-version: ["1.7.1"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry ${{ matrix.poetry-version }}
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          pip install poetry==${{ matrix.poetry-version }}
      - name: View poetry --help
        run: poetry --help
      - name: Install dependencies
        shell: bash
        run: poetry install

      - name: Checking imports with isort
        run: |
          poetry run isort -c --profile black --python-version 3 .
      - name: Checking formatting with black
        run: |
          poetry run black --check .
      - name: Checking style with flake8
        run: |
          poetry run flake8 .
      - name: Analysing the code with pylint
        run: |
          poetry run pylint $(git ls-files '*.py')
      - name: Analysing typing with pyright
        run: |
          poetry run pyright --pythonversion ${{ matrix.python-version }}
      - name: Run pytest
        uses: pavelzw/pytest-action@v2
        with:
          verbose: true
          emoji: false
          job-summary: true
          custom-pytest: "poetry run pytest"
          custom-arguments: "-q"
          click-to-expand: true
          report-title: "Test Report"
