[MAIN]

# Files or directories to be skipped. They should be base names, not paths.
ignore=

# Files or directories matching the regex patterns are skipped. The regex
# matches against base names, not paths.
ignore-patterns=

load-plugins=pylint.extensions.docparams,
             pylint.extensions.docstyle,
             decorator_docstring_suppress_checker

# Pickle collected data for later comparisons.
persistent=False

# Use multiple processes to speed up Pylint.
jobs=4

init-hook="import sys; sys.path.append("src"); sys.path.append("tools/pylint_plugins"); "


[BASIC]

# Naming styles -- Pretty much all defaults
class-attribute-naming-style=snake_case
inlinevar-naming-style=snake_case

# PascalCase, plus possible leading underscores
typealias-rgx=^_{0,2}[A-Z](([a-z0-9]+[A-Z]?)*)$
typevar-rgx=^[A-Z][_a-zA-Z0-9]*$

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=^(__.*__|main|test_[a-z0-9_]*)$


[EXCEPTIONS]

overgeneral-exceptions=builtins.StandardError,
                       builtins.Exception,
                       builtins.BaseException


[FORMAT]

# Maximum number of characters on a single line (consistent with Black).
max-line-length=88

# TODO(https://github.com/pylint-dev/pylint/issues/3352): Direct pylint to
# exempt lines made too long by directives to pytype.

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=(?x)(
  ^\s*(\#\ )?<?https?://\S+>?$|
  ^\s*(from\s+\S+\s+)?import\s+.+$)

# Allow the body of an if to be on the same line as the test if there is no
# else.
single-line-if-stmt=yes

max-module-lines=99999

# String used as indentation unit.
indent-string='    '

# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.
expected-line-ending-format=LF


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=re


[LOGGING]

# TODO: To enable
# logging-format-style=new


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=TODO


[SPELLING]

# Tells whether to store unknown words to indicated private dictionary in
# --spelling-private-dict-file option instead of raising a message.
spelling-store-unknown-words=False


[STRING]

# This flag controls whether inconsistent-quotes generates a warning when the
# character used as a quote delimiter is used inconsistently within a module.
check-quote-consistency=True


[VARIABLES]

# A regular expression matching the name of dummy variables (i.e. expectedly
# not used).
dummy-variables-rgx=_+$|dummy|^ignored_|^unused_

# List of strings which can identify a callback function by name. A callback
# name must start or end with one of those strings.
callbacks=_cb


[PARAMETER DOCUMENTATION]

accept-no-param-doc=False
accept-no-raise-doc=False
accept-no-return-doc=False
accept-no-yields-doc=False

# Possible choices: ['sphinx', 'epytext', 'google', 'numpy', 'default']
default-docstring-type=google


[MESSAGES CONTROL]

# Only show warnings with the listed confidence levels. Leave empty to show
# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED
confidence=

disable=docstring-first-line-empty,
        fixme,
        too-few-public-methods,
        too-many-arguments,
        too-many-branches,
        too-many-instance-attributes,
        too-many-positional-arguments,
        too-many-public-methods,
        too-many-statements,


[REPORTS]

# Set the output format. Available formats are text, parseable, colorized,
# msvs (visual studio) json2 (improved json), json (old json format), github
# (GitHub Actions).
output-format=colorized

reports=no
