[tox]
envlist = py{310,311,312,313,314}
isolated_build = true
skip_missing_interpreters = true

[gh-actions]
python =
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313
    3.14: py314

[testenv]
description = Run tests and checks for Python {envname}
allowlist_externals = poetry
commands_pre =
    poetry install --no-root
commands =
    # Format validation with Ruff
    poetry run ruff format --check --quiet --diff --target-version py310 .
    # Linting with Ruff
    poetry run ruff check --target-version py310 .
    # Checking imports with isort
    poetry run isort -c --profile black --python-version auto .
    # Checking formatting with black
    poetry run black --check .
    # Checking style with flake8
    poetry run flake8 .
    # Analyzing the code with pylint
    poetry run pylint src tests
    # Analyzing typing with pyright
    poetry run pyright --pythonversion {env:PYRIGHT_PYTHON_VERSION}
    # Run pytest
    poetry run pytest -q

[testenv:py310]
setenv =
    PYRIGHT_PYTHON_VERSION=3.10

[testenv:py311]
setenv =
    PYRIGHT_PYTHON_VERSION=3.11

[testenv:py312]
setenv =
    PYRIGHT_PYTHON_VERSION=3.12

[testenv:py313]
setenv =
    PYRIGHT_PYTHON_VERSION=3.13

[testenv:py314]
setenv =
    PYRIGHT_PYTHON_VERSION=3.14

# Quick check environment - runs checks only once on your current Python version
[testenv:check]
description = Run all checks once on current Python version
commands =
    poetry run ruff format --check --quiet --diff --target-version py310 .
    poetry run ruff check --target-version py310 .
    poetry run isort -c --profile black --python-version auto .
    poetry run black --check .
    poetry run flake8 .
    poetry run pylint src tests
    poetry run pyright
    poetry run pytest -q

# Fast test environment - only runs tests, no linting
[testenv:test]
description = Run only tests across all Python versions
envlist = py{310,311,312,313,314}
commands =
    poetry run pytest -q
